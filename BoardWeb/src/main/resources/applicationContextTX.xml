<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan base-package="com.enc.biz"></context:component-scan>

	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<context:property-placeholder location = "classpath:config/database.properties"/>		 
		 
	<!-- DataSource 설정 - config/database.properties 읽어오기  -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"  
	    destroy-method="close"
	    p:driverClassName="${db.driverClassName}"
	    p:url="${db.url}"
	    p:username="${db.username}"
	    p:password="${db.password}"
	/>		 
	
	<!-- Spring JDBC 설정 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Transaction 설정 -->
	<!-- 	txmanager -> db에 연결할때 사용
					transaction, comming에 사용  -->

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 	advice : 대상 특정 (전체 중 get 함수에서 읽기만 가능), 그 나머지에는 transactinon을 넣겠다 	 -->	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- pointCut : 트랜잭션을 넣기 가능, 
		sqlSeqNum : db에서 중복됐다 말할 수 있음 but Spring, Tomcat에서 원인을 모름 
			->> pointCUT 이용해 처리 가능 
	
		pointcut에 advice 대상으로 함 
	 -->
	<aop:config>
		<aop:pointcut id="txPointcut"  expression="execution(* com.enc.biz..*(..))"/>
		
		<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
	</aop:config>
</beans>
